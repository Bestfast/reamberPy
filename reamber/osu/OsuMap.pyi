from __future__ import annotations

from dataclasses import dataclass
from typing import List, Dict, Union

from reamber.base.Map import Map
from reamber.osu.OsuMapMeta import OsuMapMeta
from reamber.osu.lists.OsuBpmList import OsuBpmList
from reamber.osu.lists.OsuSvList import OsuSvList
from reamber.osu.lists.notes.OsuHitList import OsuHitList
from reamber.osu.lists.notes.OsuHoldList import OsuHoldList
from reamber.osu.lists.notes.OsuNoteList import OsuNoteList


@dataclass
class OsuMap(Map[OsuNoteList, OsuHitList, OsuHoldList, OsuBpmList], OsuMapMeta):

    @property
    def svs(self) -> OsuSvList: ...
    @svs.setter
    def svs(self, val) -> None: ...
    def reset_all_samples(self, notes=True, samples=True) -> None: ...
    @staticmethod
    def read(lines: List[str]) -> OsuMap: ...
    @staticmethod
    def read_file(file_path: str) -> OsuMap: ...
    def write(self) -> List[str]: ...
    def write_file(self, file_path="") -> None: ...
    def _read_file_metadata(self, lines: List[str]): ...
    def _read_file_timing_points(self, lines: Union[List[str], str]): ...

    def _read_file_hit_objects(self, lines: Union[List[str], str]): ...
    def scroll_speed(self, center_bpm: float = None) -> List[Dict[str, float]]: ...

    # noinspection PyMethodOverriding
    def metadata(self, unicode=True) -> str: ...
    def rate(self, by: float, inplace:bool = False) -> OsuMap: ...